// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static Advertise.Web.Controllers.CategoryController Category = new Advertise.Web.Controllers.T4MVC_CategoryController();
    public static Advertise.Web.Controllers.HomeController Home = new Advertise.Web.Controllers.T4MVC_HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string bootstrap_min_js_map = Url("bootstrap.min.js.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Customs {
            public const string UrlPath = "~/Scripts/Customs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
            public static readonly string noty_alerts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/noty.alerts.min.js") ? Url("noty.alerts.min.js") : Url("noty.alerts.js");
            public static readonly string site_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/site.min.js") ? Url("site.min.js") : Url("site.js");
        }
    
        public static readonly string jquery_1_9_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-1.9.1.intellisense.min.js") ? Url("jquery-1.9.1.intellisense.min.js") : Url("jquery-1.9.1.intellisense.js");
        public static readonly string jquery_1_9_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-1.9.1.min.js") ? Url("jquery-1.9.1.min.js") : Url("jquery-1.9.1.js");
        public static readonly string jquery_1_9_1_min_js = Url("jquery-1.9.1.min.js");
        public static readonly string jquery_1_9_1_min_map = Url("jquery-1.9.1.min.map");
        public static readonly string jquery_3_1_0_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.0.intellisense.min.js") ? Url("jquery-3.1.0.intellisense.min.js") : Url("jquery-3.1.0.intellisense.js");
        public static readonly string jquery_3_1_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.0.min.js") ? Url("jquery-3.1.0.min.js") : Url("jquery-3.1.0.js");
        public static readonly string jquery_3_1_0_min_js = Url("jquery-3.1.0.min.js");
        public static readonly string jquery_3_1_0_min_map = Url("jquery-3.1.0.min.map");
        public static readonly string jquery_3_1_0_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.0.slim.min.js") ? Url("jquery-3.1.0.slim.min.js") : Url("jquery-3.1.0.slim.js");
        public static readonly string jquery_3_1_0_slim_min_js = Url("jquery-3.1.0.slim.min.js");
        public static readonly string jquery_3_1_0_slim_min_map = Url("jquery-3.1.0.slim.min.map");
        public static readonly string jquery_noty_packaged_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.noty.packaged.min.js") ? Url("jquery.noty.packaged.min.js") : Url("jquery.noty.packaged.js");
        public static readonly string jquery_noty_packaged_min_js = Url("jquery.noty.packaged.min.js");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Noty {
            public const string UrlPath = "~/Scripts/Noty";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_noty_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.noty.min.js") ? Url("jquery.noty.min.js") : Url("jquery.noty.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class layouts {
                public const string UrlPath = "~/Scripts/Noty/layouts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string bottom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bottom.min.js") ? Url("bottom.min.js") : Url("bottom.js");
                public static readonly string bottomCenter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bottomCenter.min.js") ? Url("bottomCenter.min.js") : Url("bottomCenter.js");
                public static readonly string bottomLeft_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bottomLeft.min.js") ? Url("bottomLeft.min.js") : Url("bottomLeft.js");
                public static readonly string bottomRight_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bottomRight.min.js") ? Url("bottomRight.min.js") : Url("bottomRight.js");
                public static readonly string center_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/center.min.js") ? Url("center.min.js") : Url("center.js");
                public static readonly string centerLeft_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/centerLeft.min.js") ? Url("centerLeft.min.js") : Url("centerLeft.js");
                public static readonly string centerRight_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/centerRight.min.js") ? Url("centerRight.min.js") : Url("centerRight.js");
                public static readonly string inline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/inline.min.js") ? Url("inline.min.js") : Url("inline.js");
                public static readonly string top_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/top.min.js") ? Url("top.min.js") : Url("top.js");
                public static readonly string topCenter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/topCenter.min.js") ? Url("topCenter.min.js") : Url("topCenter.js");
                public static readonly string topLeft_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/topLeft.min.js") ? Url("topLeft.min.js") : Url("topLeft.js");
                public static readonly string topRight_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/topRight.min.js") ? Url("topRight.min.js") : Url("topRight.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                public const string UrlPath = "~/Scripts/Noty/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                public static readonly string relax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/relax.min.js") ? Url("relax.min.js") : Url("relax.js");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Customs {
            public const string UrlPath = "~/Content/Customs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string iransans_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/iransans.min.css") ? Url("iransans.min.css") : Url("iransans.css");
            public static readonly string site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/site.min.css") ? Url("site.min.css") : Url("site.css");
        }
    
        public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
        public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Fonts {
            public const string UrlPath = "~/Content/Fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
            public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
            public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
            public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
            public static readonly string fontawesome_webfont_woff2 = Url("fontawesome-webfont.woff2");
            public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
            public static readonly string IRANSans_Bold_web_eot = Url("IRANSans-Bold-web.eot");
            public static readonly string IRANSans_Bold_web_ttf = Url("IRANSans-Bold-web.ttf");
            public static readonly string IRANSans_Bold_web_woff = Url("IRANSans-Bold-web.woff");
            public static readonly string IRANSans_Bold_web_woff2 = Url("IRANSans-Bold-web.woff2");
            public static readonly string IRANSans_Light_web_eot = Url("IRANSans-Light-web.eot");
            public static readonly string IRANSans_Light_web_ttf = Url("IRANSans-Light-web.ttf");
            public static readonly string IRANSans_Light_web_woff = Url("IRANSans-Light-web.woff");
            public static readonly string IRANSans_Light_web_woff2 = Url("IRANSans-Light-web.woff2");
            public static readonly string IRANSans_Medium_web_eot = Url("IRANSans-Medium-web.eot");
            public static readonly string IRANSans_Medium_web_ttf = Url("IRANSans-Medium-web.ttf");
            public static readonly string IRANSans_Medium_web_woff = Url("IRANSans-Medium-web.woff");
            public static readonly string IRANSans_Medium_web_woff2 = Url("IRANSans-Medium-web.woff2");
            public static readonly string IRANSans_UltraLight_web_eot = Url("IRANSans-UltraLight-web.eot");
            public static readonly string IRANSans_UltraLight_web_ttf = Url("IRANSans-UltraLight-web.ttf");
            public static readonly string IRANSans_UltraLight_web_woff = Url("IRANSans-UltraLight-web.woff");
            public static readonly string IRANSans_UltraLight_web_woff2 = Url("IRANSans-UltraLight-web.woff2");
            public static readonly string IRANSans_web_eot = Url("IRANSans-web.eot");
            public static readonly string IRANSans_web_ttf = Url("IRANSans-web.ttf");
            public static readonly string IRANSans_web_woff = Url("IRANSans-web.woff");
            public static readonly string IRANSans_web_woff2 = Url("IRANSans-web.woff2");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            public const string UrlPath = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string Avatar001_jpg = Url("Avatar001.jpg");
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class Customs 
            {
                public static class Assets
                {
                    public const string _references_js = "~/Scripts/Customs/_references.js"; 
                    public const string noty_alerts_js = "~/Scripts/Customs/noty.alerts.js"; 
                    public const string site_js = "~/Scripts/Customs/site.js"; 
                }
            }
            public static partial class Noty 
            {
                public static partial class layouts 
                {
                    public static class Assets
                    {
                        public const string bottom_js = "~/Scripts/Noty/layouts/bottom.js"; 
                        public const string bottomCenter_js = "~/Scripts/Noty/layouts/bottomCenter.js"; 
                        public const string bottomLeft_js = "~/Scripts/Noty/layouts/bottomLeft.js"; 
                        public const string bottomRight_js = "~/Scripts/Noty/layouts/bottomRight.js"; 
                        public const string center_js = "~/Scripts/Noty/layouts/center.js"; 
                        public const string centerLeft_js = "~/Scripts/Noty/layouts/centerLeft.js"; 
                        public const string centerRight_js = "~/Scripts/Noty/layouts/centerRight.js"; 
                        public const string inline_js = "~/Scripts/Noty/layouts/inline.js"; 
                        public const string top_js = "~/Scripts/Noty/layouts/top.js"; 
                        public const string topCenter_js = "~/Scripts/Noty/layouts/topCenter.js"; 
                        public const string topLeft_js = "~/Scripts/Noty/layouts/topLeft.js"; 
                        public const string topRight_js = "~/Scripts/Noty/layouts/topRight.js"; 
                    }
                }
                public static partial class themes 
                {
                    public static class Assets
                    {
                        public const string bootstrap_js = "~/Scripts/Noty/themes/bootstrap.js"; 
                        public const string default_js = "~/Scripts/Noty/themes/default.js"; 
                        public const string relax_js = "~/Scripts/Noty/themes/relax.js"; 
                    }
                }
                public static class Assets
                {
                    public const string jquery_noty_js = "~/Scripts/Noty/jquery.noty.js"; 
                }
            }
            public static class Assets
            {
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string jquery_1_9_1_intellisense_js = "~/Scripts/jquery-1.9.1.intellisense.js"; 
                public const string jquery_1_9_1_js = "~/Scripts/jquery-1.9.1.js"; 
                public const string jquery_1_9_1_min_js = "~/Scripts/jquery-1.9.1.min.js"; 
                public const string jquery_3_1_0_intellisense_js = "~/Scripts/jquery-3.1.0.intellisense.js"; 
                public const string jquery_3_1_0_js = "~/Scripts/jquery-3.1.0.js"; 
                public const string jquery_3_1_0_min_js = "~/Scripts/jquery-3.1.0.min.js"; 
                public const string jquery_3_1_0_slim_js = "~/Scripts/jquery-3.1.0.slim.js"; 
                public const string jquery_3_1_0_slim_min_js = "~/Scripts/jquery-3.1.0.slim.min.js"; 
                public const string jquery_noty_packaged_js = "~/Scripts/jquery.noty.packaged.js"; 
                public const string jquery_noty_packaged_min_js = "~/Scripts/jquery.noty.packaged.min.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class Customs 
            {
                public static class Assets
                {
                    public const string iransans_css = "~/Content/Customs/iransans.css";
                    public const string site_css = "~/Content/Customs/site.css";
                }
            }
            public static partial class Fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class Images 
            {
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_theme_min_css = "~/Content/bootstrap-theme.min.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string font_awesome_css = "~/Content/font-awesome.css";
                public const string font_awesome_min_css = "~/Content/font-awesome.min.css";
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


