@model Advertise.ViewModel.Models.Categories.CategoryEditViewModel

@{
    ViewBag.Title = "ویرایش";
}
@using (Html.BeginForm(MVC.Category.Edit(), FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-default">

        <div class="panel-heading">
            <h3 class="panel-title">ویرایش دسته</h3>
        </div>

        <div class="panel-body">

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ParentId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="k-rtl">
                            <div id="getCategoryList"></div>
                        </div>
                        @Html.HiddenFor(model => model.ParentId)
                        @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageFileName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10 k-rtl">
                        <input type="file" id="ImageFileName" name="ImageFileName" accept=".jpg,.png">
                        @Html.ValidationMessageFor(model => model.ImageFileName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">پیش نمایش</label>
                    <div class="col-md-10">
                        @if (Model.ImageFileName == null)
                        {
                            <img src="~/Files/Avatar/no-preview.png" id="ImagePreview" class="img-thumbnail" width="300" height="300">
                        }
                        else
                        {
                            <img src="~/Uploads/@Model.ImageFileName" id="ImagePreview" class="img-thumbnail" width="300" height="300">
                        }

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Body, new { @class = "control-label col-md-2" })
                    <div class="col-md-10 k-rtl">
                        @Html.TextAreaFor(model=>model.Body, new { htmlAttributes = new { @class = "form-control" }, rows = 10, columns = 40, style="height: 440px" })
                        @Html.ValidationMessageFor(model => model.Body, "", new {@class = "text-danger"})
                    </div>
                </div>


            </div>
        </div>

        <div class="panel-footer">
            <div class="row">

                <div class="col-md-2">
                    <input type="submit" value="ثبت" class="btn btn-primary" />
                </div>

                <div class="col-md-2">
                    @Html.ActionLink("برگشت به لیست", "List", new { Controller = "Category" }, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    </div>
}


@section scripts
{
    <script type="text/javascript">
        function expandAndSelectNode(id, treeViewName) {
            // get the Kendo TreeView widget by it's ID given by treeviewName
            var treeView = $(treeViewName).data('kendoTreeView');

            // find node with data-id = id
            var item = $(treeViewName).find("li[data-id='" + id + "']").find(".k-in");

            // expand all parent nodes
            $(item).parentsUntil('.k-treeview').filter('.k-item').each(
                function(index, element) {
                    $(treeViewName).data('kendoTreeView').expand($(this));
                }
            );

            // get DataSourceItem by given id
            var nodeDataItem = treeView.dataSource.get(id);

            //get node within treeview widget by uid
            var node = treeView.findByUid(nodeDataItem.uid);

            treeView.select(node);
            //$(treeView).select(node);
            //treeView.select(".k-item:last");
        }

        expandAndSelectNode(@Model.ParentId, "#getCategoryList");
    </script>

}
